{
  // "extends": "react-app",
  "root": true,

  "parser": "babel-eslint",

  "plugins": ["prettier", "import", "flowtype", "jsx-a11y", "react", "react-hooks"],

  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jest": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module",
        "ecmaFeatures": {
          "jsx": true
        },

        // typescript-eslint specific options
        "warnOnUnsupportedTypeScriptVersion": true
      },
      "plugins": ["@typescript-eslint"],
      // If adding a typescript-eslint version of an existing ESLint rule,
      // make sure to disable the ESLint rule here.
      "rules": {
        // TypeScript"s `noFallthroughCasesInSwitch` option is more robust (#6906)
        "default-case": "off",
        // "tsc" already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/291)
        "no-dupe-class-members": "off",
        // "tsc" already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/477)
        "no-undef": "off",

        // Add TypeScript specific rules (and turn off ESLint equivalents)
        "@typescript-eslint/consistent-type-assertions": "warn",
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "warn",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
          "warn",
          {
            "functions": false,
            "classes": false,
            "variables": false,
            "typedefs": false
          }
        ],
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": true,
            "allowTernary": true,
            "allowTaggedTemplates": true
          }
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "args": "none",
            "ignoreRestSiblings": true
          }
        ],
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "warn"
      }
    }
  ],
  "rules": {
    "prettier/prettier": "error",
    "no-var": "error", // http://eslint.org/docs/rules/no-var
    "prefer-const": "error", // http://eslint.org/docs/rules/prefer-const

    /**
     * Variables
     */
    "no-shadow": [
      "warn",
      {
        // http://eslint.org/docs/rules/no-shadow
        "allow": ["err", "done"]
      }
    ],
    "no-shadow-restricted-names": "error", // http://eslint.org/docs/rules/no-shadow-restricted-names
    "no-undef": "error", // http://eslint.org/docs/rules/no-undef
    "no-unused-vars": [
      "error",
      {
        // http://eslint.org/docs/rules/no-unused-vars
        "vars": "local",
        "args": "after-used"
      }
    ],
    "no-use-before-define": "error", // http://eslint.org/docs/rules/no-use-before-define

    /**
     * Possible errors
     */
    "no-cond-assign": ["error", "always"], // http://eslint.org/docs/rules/no-cond-assign
    "no-debugger": "warn", // http://eslint.org/docs/rules/no-debugger
    "no-alert": "error", // http://eslint.org/docs/rules/no-alert
    "no-constant-condition": "error", // http://eslint.org/docs/rules/no-constant-condition
    "no-dupe-keys": "error", // http://eslint.org/docs/rules/no-dupe-keys
    "no-duplicate-case": "error", // http://eslint.org/docs/rules/no-duplicate-case
    "no-empty": "error", // http://eslint.org/docs/rules/no-empty
    "no-ex-assign": "error", // http://eslint.org/docs/rules/no-ex-assign
    "no-extra-boolean-cast": "error", // http://eslint.org/docs/rules/no-extra-boolean-cast
    "no-extra-semi": "error", // http://eslint.org/docs/rules/no-extra-semi
    "no-func-assign": "error", // http://eslint.org/docs/rules/no-func-assign
    "no-inner-declarations": "error", // http://eslint.org/docs/rules/no-inner-declarations
    "no-invalid-regexp": "error", // http://eslint.org/docs/rules/no-invalid-regexp
    "no-irregular-whitespace": [
      "error",
      {
        // http://eslint.org/docs/rules/no-irregular-whitespace
        "skipComments": true
      }
    ],
    "no-obj-calls": "error", // http://eslint.org/docs/rules/no-obj-calls
    "no-sparse-arrays": "error", // http://eslint.org/docs/rules/no-sparse-arrays
    "no-unreachable": "error", // http://eslint.org/docs/rules/no-unreachable
    "use-isnan": "error", // http://eslint.org/docs/rules/use-isnan
    "block-scoped-var": "error", // http://eslint.org/docs/rules/block-scoped-var

    /**
     * Best practices
     */
    "consistent-return": "error", // http://eslint.org/docs/rules/consistent-return
    "curly": ["error", "all"], // http://eslint.org/docs/rules/curly
    "default-case": "error", // http://eslint.org/docs/rules/default-case
    "dot-notation": [
      "error",
      {
        // http://eslint.org/docs/rules/dot-notation
        "allowKeywords": true
      }
    ],
    "eqeqeq": "error", // http://eslint.org/docs/rules/eqeqeq
    "guard-for-in": "error", // http://eslint.org/docs/rules/guard-for-in
    "no-else-return": "error", // http://eslint.org/docs/rules/no-else-return
    "no-eq-null": "error", // http://eslint.org/docs/rules/no-eq-null
    "no-eval": "error", // http://eslint.org/docs/rules/no-eval
    "no-extend-native": [
      "error",
      {
        // http://eslint.org/docs/rules/no-extend-native
        "exceptions": ["Object"]
      }
    ],
    "no-extra-bind": "error", // http://eslint.org/docs/rules/no-extra-bind
    "no-fallthrough": "error", // http://eslint.org/docs/rules/no-fallthrough
    "no-floating-decimal": "error", // http://eslint.org/docs/rules/no-floating-decimal
    "no-implied-eval": "error", // http://eslint.org/docs/rules/no-implied-eval
    "no-lone-blocks": "error", // http://eslint.org/docs/rules/no-lone-blocks
    "no-loop-func": "error", // http://eslint.org/docs/rules/no-loop-func
    "no-multi-str": "error", // http://eslint.org/docs/rules/no-multi-str
    "no-native-reassign": "error", // http://eslint.org/docs/rules/no-native-reassign
    "no-new": "error", // http://eslint.org/docs/rules/no-new
    "no-new-func": "error", // http://eslint.org/docs/rules/no-new-func
    "no-new-wrappers": "error", // http://eslint.org/docs/rules/no-new-wrappers
    "no-octal": "error", // http://eslint.org/docs/rules/no-octal
    "no-octal-escape": "error", // http://eslint.org/docs/rules/no-octal-escape
    "no-param-reassign": "error", // http://eslint.org/docs/rules/no-param-reassign
    "no-proto": "error", // http://eslint.org/docs/rules/no-proto
    "no-redeclare": "error", // http://eslint.org/docs/rules/no-redeclare
    "no-return-assign": "error", // http://eslint.org/docs/rules/no-return-assign
    "no-script-url": "error", // http://eslint.org/docs/rules/no-script-url
    "no-self-compare": "error", // http://eslint.org/docs/rules/no-self-compare
    "no-sequences": "error", // http://eslint.org/docs/rules/no-sequences
    "no-throw-literal": "error", // http://eslint.org/docs/rules/no-throw-literal
    "no-with": "error", // http://eslint.org/docs/rules/no-with
    "radix": "error", // http://eslint.org/docs/rules/radix
    "vars-on-top": "error", // http://eslint.org/docs/rules/vars-on-top
    "yoda": "error", // http://eslint.org/docs/rules/yoda

    "import/default": "off",
    "import/no-duplicates": "off", // https://eslint.org/docs/rules/no-duplicate-imports#disallow-duplicate-imports-no-duplicate-imports
    "import/named": "off",
    "import/namespace": "off",
    "import/no-unresolved": "off",
    // "import/no-named-as-default": "error",

    /**
     * Style
     */
    "no-mixed-spaces-and-tabs": "error", // http://eslint.org/docs/rules/no-mixed-spaces-and-tabs
    "strict": ["error", "function"], // http://eslint.org/docs/rules/strict
    "prefer-arrow-callback": "error", // http://eslint.org/docs/rules/prefer-arrow-callback
    "consistent-this": [
      "error", // http://eslint.org/docs/rules/consistent-this
      "self",
      "internals.self"
    ],
    "indent": [
      "error",
      "error",
      {
        // http://eslint.org/docs/rules/indent
        "SwitchCase": "warn"
      }
    ],
    "brace-style": [
      "error", // http://eslint.org/docs/rules/brace-style
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "quotes": [
      "error",
      "single",
      "avoid-escape" // http://eslint.org/docs/rules/quotes
    ],
    "camelcase": [
      "warn",
      {
        // http://eslint.org/docs/rules/camelcase
        "properties": "never"
      }
    ],
    "comma-spacing": [
      "error",
      {
        // http://eslint.org/docs/rules/comma-spacing
        "before": false,
        "after": true
      }
    ],
    "comma-style": ["error", "last"], // http://eslint.org/docs/rules/comma-style
    "eol-last": "error", // http://eslint.org/docs/rules/eol-last
    "func-names": "error", // http://eslint.org/docs/rules/func-names
    "key-spacing": [
      "error",
      {
        // http://eslint.org/docs/rules/key-spacing
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "new-cap": "error", // http://eslint.org/docs/rules/new-cap
    "newline-after-var": ["error"], // http://eslint.org/docs/rules/newline-after-var
    "newline-before-return": ["error"], // http://eslint.org/docs/rules/newline-before-return
    "no-multiple-empty-lines": [
      "error",
      {
        // http://eslint.org/docs/rules/no-multiple-empty-lines
        "max": "error",
        "maxEOF": "warn"
      }
    ],
    "no-nested-ternary": "error", // http://eslint.org/docs/rules/no-nested-ternary
    "no-new-object": "error", // http://eslint.org/docs/rules/no-new-object
    "no-spaced-func": "error", // http://eslint.org/docs/rules/no-spaced-func
    "no-trailing-spaces": "error", // http://eslint.org/docs/rules/no-trailing-spaces
    "no-extra-parens": ["error", "functions"], // http://eslint.org/docs/rules/no-extra-parens
    "no-underscore-dangle": "off", // http://eslint.org/docs/rules/no-underscore-dangle
    "one-var": ["error", "never"], // http://eslint.org/docs/rules/one-var
    "semi": ["error", "always"], // http://eslint.org/docs/rules/semi
    "semi-spacing": [
      "error",
      {
        // http://eslint.org/docs/rules/semi-spacing
        "before": false,
        "after": true
      }
    ],
    "space-before-blocks": "error", // http://eslint.org/docs/rules/space-before-blocks
    "space-before-function-paren": ["error", "never"], // http://eslint.org/docs/rules/space-before-function-paren
    "space-infix-ops": "error", // http://eslint.org/docs/rules/space-infix-ops
    "spaced-comment": [
      "error",
      "always",
      {
        // http://eslint.org/docs/rules/spaced-comment
        "exceptions": ["-", "+"],
        "markers": ["==", "!"] // space here to support sprockets directives
      }
    ],
    // React
    "jsx-quotes": ["error", "prefer-double"],
    "react/display-name": "off",
    "react/jsx-boolean-value": "warn",
    "react/jsx-no-undef": "error",
    "react/jsx-sort-prop-types": "off",
    "react/jsx-sort-props": "off",
    "react/jsx-uses-react": "warn",
    "react/jsx-uses-vars": "warn",
    "react/no-did-update-set-state": "error",
    "react/no-multi-comp": ["error", { "ignoreStateless": true }],
    "react/no-unknown-property": "error",
    // "react/prop-types": "error",
    "react/react-in-jsx-scope": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": "error",
    "react/jsx-wrap-multilines": "error"
  }
}
